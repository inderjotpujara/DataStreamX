version: '3.8'
services:
  api:
    build: ./backend
    ports:
      - "3000:3000"
    env_file: .env
    depends_on:
      db:
        condition: service_healthy
      kafka:
        condition: service_started
    volumes:
      - ./backend:/app
      - /app/node_modules
    working_dir: /app
    command: npm run dev
  
  data-ingestion:
    build:
      context: ./backend/data-ingestion
      dockerfile: Dockerfile
    depends_on:
      kafka:
        condition: service_started
    env_file: ./backend/data-ingestion/.env
    volumes:
      - ./backend/data-ingestion:/app
      - /app/node_modules
      - /app/dist  # Prevent overwriting built files
    restart: always

  data-processor:
    build: 
      context: ./backend/data-processor
      dockerfile: Dockerfile
    depends_on:
      db:
        condition: service_healthy
      kafka:
        condition: service_started
    env_file: ./backend/data-processor/.env
    volumes:
      - ./backend/data-processor:/app
      - /app/node_modules
      - /app/dist  # Prevent overwriting built files
    restart: always

  db:
    image: postgres:latest
    environment:
      POSTGRES_USER: datastreamx
      POSTGRES_PASSWORD: development
      POSTGRES_DB: datastreamx
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U datastreamx"]
      interval: 5s
      timeout: 5s
      retries: 5

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      zookeeper:
        condition: service_started
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

volumes:
  postgres_data: